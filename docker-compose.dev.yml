# Dev configuration
version: "3.7"
services:
  app:
    image: node:12-alpine
    command: sh -c "(cd server && yarn install) && (cd client && yarn install) && (cd server && yarn run dev)"
    ports:
      - 4200:4200
      - 3000:3000
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      MONGO_HOST: mongo # This should be the same as the databse service name in this file
      MONGO_USERNAME: root # This should keep the same as that in the init-mongo.js file
      MONGO_PASSWORD: secret
      MONGO_DB: links # keep it the same as the MONGO_INITDB_DATABASE
      GOOGLE_APPLICATION_CREDENTIALS: ../config/short-link-service-281615-f8909019adc5.json # path to the google service account credential file
    depends_on:
      - mongo # only starts the app server after all its dependencies are ready.
    networks:
      - app-network
  mongo: # This is the service name as well as the network alias/hostname
    image: "mongo"
    container_name: "my-mongo-container"
    environment:
      - MONGO_INITDB_DATABASE=links # this is the DB the inti-mongo.js will run on
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=secret
    volumes:
      - ./dev-init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      # NOTE: Be sure to remove this mongo-volume folder if you want the init-mongo.js to be run.
      - ./server/mongo-volume:/data/db
    networks:
      - app-network
      # ports:
      # - "27017-27019:27017-27019"
networks:
  app-network:
    driver: bridge
